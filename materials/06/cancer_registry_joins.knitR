#' ---
#' title: Assignment from Session 6
#' author: Core R Course
#' date: August 22, 2018
#' ---

library(tidyverse)


#' ## Import Data

#' If you don't have the data in your working directory, you can download it by
#' uncommenting and running the two lines below.
# download.file("https://git.io/fATNV", "CancerRegistryData.csv")
# download.file("https://git.io/fATNo", "CancerRegistryDataPatients.csv")

cr_patients <- read_csv(
  "CancerRegistryDataPatients.csv",
  col_types = cols(`Date Last Patient Contact/Dead` = col_date(format = "%m/%d/%y"))
)

cr <- read_csv(
  "CancerRegistryData.csv",
  col_types = cols(
    `Date Last Patient Contact/Dead` = col_date(format = "%m/%d/%y"),
    `Date of Diagnosis` = col_date(format = "%m/%d/%y")
  )
)


#' ## Task 1

#' Merge the two data sets to add the patient information from `cr_patients` to
#' the corresponding diagnosis records in `cr`

full_join(cr_patients, cr, by = "Medical Record Number")




#' ## Task 2

#' Find deceased patients at least 75 years or older. Create a data frame
#' containing their patient information and all of their diagnosis records.

task2_patients <- cr_patients %>%
  filter(`Age, Current` >= 75, `Vital Status` == "DEAD")

left_join(task2_patients, cr, by = "Medical Record Number")




#' ## Task 3

#' Find the diagnosis records of the African American patients.

task3_patients <- cr_patients %>%
  filter(Race == "BLACK")

semi_join(cr, task3_patients, by = "Medical Record Number")

task3_patients

semi_join(cr, task3_patients, by = "Medical Record Number") %>%
  group_by(`Medical Record Number`) %>% count()


#' BONUS: Find the diagnosis records of married African American patients using two joins.

task3_married <- cr %>%
  filter(`Marital Status at DX` == "MARRIED") %>%
  select(`Medical Record Number`, `Marital Status at DX`) %>%
  distinct()

semi_join(cr, task3_patients, by = "Medical Record Number") %>%
  semi_join(task3_married)



#' ## Task 4

#' First, verify that all patients in the diagnosis records data set `cr` appear
#' in the patient information data set using `anti_join`
#'
#' Then, find all patients who have had more than one cancer diagnosis and create
#' a data frame with only their patient information, using `semi_join()`.

anti_join(cr_patients, cr, by = "Medical Record Number")

task4_patients <- cr %>%
  group_by(`Medical Record Number`) %>%
  count() %>%
  filter(n > 1)

semi_join(cr, task4_patients, by = "Medical Record Number")




#' ## Task 5

#' Find patients who were last contacted in 2017 and merge their patient
#' information with their diagnosis records. Transform all dates to be the number
#' of days since their earliest diagnosis.

library(lubridate)

# Find patients last contacted in 2017
task5_selected <- cr_patients %>%
  filter(year(`Date Last Patient Contact/Dead`) == 2017)

# Create a data frame with patient and earliest diagnosis
task5_first_dx <- cr %>%
  group_by(`Medical Record Number`) %>%
  summarize(first_diagnosis = min(`Date of Diagnosis`))

# Merge task5_selected and task5_first_dx so that selected patients also have
# a `first_diagnosis` column
task5_patients <- left_join(task5_selected, task5_first_dx, by = "Medical Record Number") %>%
  select(-`Date Last Patient Contact/Dead`)

task5_patients %>%
  select(`Medical Record Number`, first_diagnosis)

# Then join patient information and diagnosis records and transform dates.
full_join(task5_patients, cr, by = "Medical Record Number") %>%
  mutate(
    `Date Last Patient Contact/Dead` = `Date Last Patient Contact/Dead` - first_diagnosis,
    `Date Last Patient Contact/Dead` = as.integer(`Date Last Patient Contact/Dead`),
    `Date of Diagnosis` = `Date of Diagnosis` - first_diagnosis,
    `Date of Diagnosis` = as.integer(`Date of Diagnosis`),
  ) %>%
  select(`Medical Record Number`, starts_with("date"))
